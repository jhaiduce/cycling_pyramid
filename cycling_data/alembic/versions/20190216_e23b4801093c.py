"""init

Revision ID: e23b4801093c
Revises: 
Create Date: 2019-02-16 09:47:23.344559

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e23b4801093c'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_equipment'))
    )
    op.create_table('locationtype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_locationtype'))
    )
    op.create_table('rider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rider'))
    )
    op.create_table('ridergroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ridergroup'))
    )
    op.create_table('surfacetype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_surfacetype'))
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('elevation', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('remarks', sa.String(), nullable=True),
    sa.Column('loctype_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['loctype_id'], ['locationtype.id'], name='fk_location_type_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_location'))
    )
    op.create_table('weatherdata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('windspeed', sa.Float(), nullable=True),
    sa.Column('gust', sa.Float(), nullable=True),
    sa.Column('winddir', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('dewpoint', sa.Float(), nullable=True),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('relative_humidity', sa.Float(), nullable=True),
    sa.Column('wx_station', sa.Integer(), nullable=True),
    sa.Column('kind', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['wx_station'], ['location.id'], name='fk_location_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_weatherdata'))
    )
    op.create_table('ride',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('start_timezone', sa.String(), nullable=True),
    sa.Column('end_timezone', sa.String(), nullable=True),
    sa.Column('startloc_id', sa.Integer(), nullable=True),
    sa.Column('endloc_id', sa.Integer(), nullable=True),
    sa.Column('route', sa.String(), nullable=True),
    sa.Column('rider', sa.Integer(), nullable=True),
    sa.Column('heartrate_avg', sa.Float(), nullable=True),
    sa.Column('heartrate_min', sa.Float(), nullable=True),
    sa.Column('heartrate_max', sa.Float(), nullable=True),
    sa.Column('ridergroup_id', sa.Integer(), nullable=True),
    sa.Column('equipment_id', sa.Integer(), nullable=True),
    sa.Column('payloadweight', sa.Float(), nullable=True),
    sa.Column('trailer', sa.Boolean(), nullable=True),
    sa.Column('roadWet', sa.Float(), nullable=True),
    sa.Column('roadIce', sa.Float(), nullable=True),
    sa.Column('roadSnow', sa.Float(), nullable=True),
    sa.Column('surface_id', sa.Integer(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('rolling_time', sa.Interval(), nullable=True),
    sa.Column('total_time', sa.Interval(), nullable=True),
    sa.Column('odometer', sa.Float(), nullable=True),
    sa.Column('estdist', sa.Boolean(), nullable=True),
    sa.Column('esttime', sa.Boolean(), nullable=True),
    sa.Column('avspeed', sa.Float(), nullable=True),
    sa.Column('maxspeed', sa.Float(), nullable=True),
    sa.Column('badData', sa.Boolean(), nullable=True),
    sa.Column('mechanicalFailure', sa.Float(), nullable=True),
    sa.Column('mishapSeverity', sa.Float(), nullable=True),
    sa.Column('remarks', sa.String(), nullable=True),
    sa.Column('wxdata_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['endloc_id'], ['location.id'], name='fk_endloc_id'),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], name='fk_equipment_id'),
    sa.ForeignKeyConstraint(['rider'], ['rider.id'], name='fk_rider_id'),
    sa.ForeignKeyConstraint(['ridergroup_id'], ['ridergroup.id'], name=op.f('fk_ride_ridergroup_id_ridergroup')),
    sa.ForeignKeyConstraint(['startloc_id'], ['location.id'], name='fk_startloc_id'),
    sa.ForeignKeyConstraint(['surface_id'], ['surfacetype.id'], name='fk_surface_id'),
    sa.ForeignKeyConstraint(['wxdata_id'], ['weatherdata.id'], name='fk_weatherdata_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ride'))
    )
    op.create_table('rideweatherdata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rain', sa.Float(), nullable=True),
    sa.Column('snow', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['weatherdata.id'], name='fk_weatherdata_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rideweatherdata'))
    )
    op.create_table('stationweatherdata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metar', sa.String(), nullable=True),
    sa.Column('report_time', sa.DateTime(), nullable=True),
    sa.Column('weather', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['weatherdata.id'], name='fk_weatherdata_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stationweatherdata'))
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stationweatherdata')
    op.drop_table('rideweatherdata')
    op.drop_table('ride')
    op.drop_table('weatherdata')
    op.drop_table('location')
    op.drop_table('surfacetype')
    op.drop_table('ridergroup')
    op.drop_table('rider')
    op.drop_table('locationtype')
    op.drop_table('equipment')
    # ### end Alembic commands ###
